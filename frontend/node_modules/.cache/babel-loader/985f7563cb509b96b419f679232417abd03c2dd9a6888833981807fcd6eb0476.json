{"ast":null,"code":"import axios from 'axios';\nimport { getRequest, getSuccess, getFailed, getError } from './noticeSlice';\nexport const getAllNotices = (id, address) => async dispatch => {\n  dispatch(getRequest());\n  try {\n    const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/${address}List/${id}`);\n    if (result.data.message) {\n      dispatch(getFailed(result.data.message));\n    } else {\n      dispatch(getSuccess(result.data));\n    }\n  } catch (error) {\n    dispatch(getError(error));\n  }\n};","map":{"version":3,"names":["axios","getRequest","getSuccess","getFailed","getError","getAllNotices","id","address","dispatch","result","get","process","env","REACT_APP_BASE_URL","data","message","error"],"sources":["/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/redux/noticeRelated/noticeHandle.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    getRequest,\n    getSuccess,\n    getFailed,\n    getError\n} from './noticeSlice';\n\nexport const getAllNotices = (id, address) => async (dispatch) => {\n    dispatch(getRequest());\n\n    try {\n        const result = await axios.get(`${process.env.REACT_APP_BASE_URL}/${address}List/${id}`);\n        if (result.data.message) {\n            dispatch(getFailed(result.data.message));\n        } else {\n            dispatch(getSuccess(result.data));\n        }\n    } catch (error) {\n        dispatch(getError(error));\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,UAAU,EACVC,UAAU,EACVC,SAAS,EACTC,QAAQ,QACL,eAAe;AAEtB,OAAO,MAAMC,aAAa,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EAC9DA,QAAQ,CAACP,UAAU,EAAE,CAAC;EAEtB,IAAI;IACA,MAAMQ,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,IAAGN,OAAQ,QAAOD,EAAG,EAAC,CAAC;IACxF,IAAIG,MAAM,CAACK,IAAI,CAACC,OAAO,EAAE;MACrBP,QAAQ,CAACL,SAAS,CAACM,MAAM,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC;IAC5C,CAAC,MAAM;MACHP,QAAQ,CAACN,UAAU,CAACO,MAAM,CAACK,IAAI,CAAC,CAAC;IACrC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZR,QAAQ,CAACJ,QAAQ,CAACY,KAAK,CAAC,CAAC;EAC7B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}