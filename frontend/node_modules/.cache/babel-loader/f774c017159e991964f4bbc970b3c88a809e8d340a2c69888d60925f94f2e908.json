{"ast":null,"code":"var _jsxFileName = \"/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/components/CustomPieChart.js\";\n// import React from 'react';\n// import { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\n// const data = [\n//     { name: 'Group A', value: 400 },\n//     { name: 'Group B', value: 300 },\n//     { name: 'Group C', value: 300 },\n//     { name: 'Group D', value: 200 },\n// ];\n\n// const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\n// const PieChart = () => {\n//     return (\n//         <ResponsiveContainer width=\"100%\" height={400}>\n//             <PieChart>\n//                 <Pie\n//                     data={data}\n//                     cx=\"50%\"\n//                     cy=\"50%\"\n//                     labelLine={false}\n//                     label={renderCustomizedLabel}\n//                     outerRadius={80}\n//                     fill=\"#8884d8\"\n//                     dataKey=\"value\"\n//                 >\n//                     {data.map((entry, index) => (\n//                         <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//                     ))}\n//                 </Pie>\n//             </PieChart>\n//         </ResponsiveContainer>\n//     );\n// };\n\n// export default PieChart;\n\nimport React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#326e0a', '#930909'];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = _ref => {\n  let {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  } = _ref;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\nconst CustomPieChart = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomPieChart;\nexport default CustomPieChart;\nvar _c;\n$RefreshReg$(_c, \"CustomPieChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","RADIAN","Math","PI","renderCustomizedLabel","_ref","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","CustomPieChart","_ref2","data","width","height","labelLine","label","dataKey","map","entry","length","_c","$RefreshReg$"],"sources":["/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/components/CustomPieChart.js"],"sourcesContent":["// import React from 'react';\n// import { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\n// const data = [\n//     { name: 'Group A', value: 400 },\n//     { name: 'Group B', value: 300 },\n//     { name: 'Group C', value: 300 },\n//     { name: 'Group D', value: 200 },\n// ];\n\n// const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n//     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//     const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//     const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//     return (\n//         <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//             {`${(percent * 100).toFixed(0)}%`}\n//         </text>\n//     );\n// };\n\n// const PieChart = () => {\n//     return (\n//         <ResponsiveContainer width=\"100%\" height={400}>\n//             <PieChart>\n//                 <Pie\n//                     data={data}\n//                     cx=\"50%\"\n//                     cy=\"50%\"\n//                     labelLine={false}\n//                     label={renderCustomizedLabel}\n//                     outerRadius={80}\n//                     fill=\"#8884d8\"\n//                     dataKey=\"value\"\n//                 >\n//                     {data.map((entry, index) => (\n//                         <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n//                     ))}\n//                 </Pie>\n//             </PieChart>\n//         </ResponsiveContainer>\n//     );\n// };\n\n// export default PieChart;\n\nimport React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nconst COLORS = ['#326e0a', '#930909'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst CustomPieChart = ({ data }) => {\n    return (\n        <ResponsiveContainer width=\"100%\" height={400}>\n            <PieChart>\n                <Pie\n                    data={data}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                >\n                    {data.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n};\n\nexport default CustomPieChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}