{"ast":null,"code":"var _jsxFileName = \"/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/pages/admin/noticeRelated/ShowNotices.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { Paper, Box, IconButton } from '@mui/material';\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { getAllNotices } from '../../../redux/noticeRelated/noticeHandle';\nimport { deleteUser } from '../../../redux/userRelated/userHandle';\nimport TableTemplate from '../../../components/TableTemplate';\nimport { GreenButton } from '../../../components/buttonStyles';\nimport SpeedDialTemplate from '../../../components/SpeedDialTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowNotices = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    noticesList,\n    loading,\n    error,\n    response\n  } = useSelector(state => state.notice);\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(getAllNotices(currentUser._id, \"Notice\"));\n  }, [currentUser._id, dispatch]);\n  if (error) {\n    console.log(error);\n  }\n  const deleteHandler = (deleteID, address) => {\n    dispatch(deleteUser(deleteID, address)).then(() => {\n      dispatch(getAllNotices(currentUser._id, \"Notice\"));\n    });\n  };\n  const noticeColumns = [{\n    id: 'title',\n    label: 'Title',\n    minWidth: 170\n  }, {\n    id: 'details',\n    label: 'Details',\n    minWidth: 100\n  }, {\n    id: 'date',\n    label: 'Date',\n    minWidth: 170\n  }];\n  const noticeRows = noticesList && noticesList.length > 0 && noticesList.map(notice => {\n    const date = new Date(notice.date);\n    const dateString = date.toString() !== \"Invalid Date\" ? date.toISOString().substring(0, 10) : \"Invalid Date\";\n    return {\n      title: notice.title,\n      details: notice.details,\n      date: dateString,\n      id: notice._id\n    };\n  });\n  const NoticeButtonHaver = _ref => {\n    let {\n      row\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => deleteHandler(row.id, \"Notice\"),\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  const actions = [{\n    icon: /*#__PURE__*/_jsxDEV(NoteAddIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this),\n    name: 'Add New Notice',\n    action: () => navigate(\"/Admin/addnotice\")\n  }, {\n    icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this),\n    name: 'Delete All Notices',\n    action: () => deleteHandler(currentUser._id, \"Notices\")\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: response ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(GreenButton, {\n          variant: \"contained\",\n          onClick: () => navigate(\"/Admin/addnotice\"),\n          children: \"Add Notice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: [Array.isArray(noticesList) && noticesList.length > 0 && /*#__PURE__*/_jsxDEV(TableTemplate, {\n          buttonHaver: NoticeButtonHaver,\n          columns: noticeColumns,\n          rows: noticeRows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(SpeedDialTemplate, {\n          actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(ShowNotices, \"A0vJVONVxagNZpbxzFxx6XV+vmA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = ShowNotices;\nexport default ShowNotices;\nvar _c;\n$RefreshReg$(_c, \"ShowNotices\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useNavigate","Paper","Box","IconButton","NoteAddIcon","DeleteIcon","getAllNotices","deleteUser","TableTemplate","GreenButton","SpeedDialTemplate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowNotices","_s","navigate","dispatch","noticesList","loading","error","response","state","notice","currentUser","user","_id","console","log","deleteHandler","deleteID","address","then","noticeColumns","id","label","minWidth","noticeRows","length","map","date","Date","dateString","toString","toISOString","substring","title","details","NoticeButtonHaver","_ref","row","children","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","actions","icon","name","action","sx","display","justifyContent","marginTop","variant","width","overflow","Array","isArray","buttonHaver","columns","rows","_c","$RefreshReg$"],"sources":["/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/pages/admin/noticeRelated/ShowNotices.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n    Paper, Box, IconButton\n} from '@mui/material';\nimport NoteAddIcon from '@mui/icons-material/NoteAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { getAllNotices } from '../../../redux/noticeRelated/noticeHandle';\nimport { deleteUser } from '../../../redux/userRelated/userHandle';\nimport TableTemplate from '../../../components/TableTemplate';\nimport { GreenButton } from '../../../components/buttonStyles';\nimport SpeedDialTemplate from '../../../components/SpeedDialTemplate';\n\nconst ShowNotices = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n    const { noticesList, loading, error, response } = useSelector((state) => state.notice);\n    const { currentUser } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(getAllNotices(currentUser._id, \"Notice\"));\n    }, [currentUser._id, dispatch]);\n\n    if (error) {\n        console.log(error);\n    }\n\n    const deleteHandler = (deleteID, address) => {\n        dispatch(deleteUser(deleteID, address))\n            .then(() => {\n                dispatch(getAllNotices(currentUser._id, \"Notice\"));\n            })\n    }\n\n    const noticeColumns = [\n        { id: 'title', label: 'Title', minWidth: 170 },\n        { id: 'details', label: 'Details', minWidth: 100 },\n        { id: 'date', label: 'Date', minWidth: 170 },\n    ];\n\n    const noticeRows = noticesList && noticesList.length > 0 && noticesList.map((notice) => {\n        const date = new Date(notice.date);\n        const dateString = date.toString() !== \"Invalid Date\" ? date.toISOString().substring(0, 10) : \"Invalid Date\";\n        return {\n            title: notice.title,\n            details: notice.details,\n            date: dateString,\n            id: notice._id,\n        };\n    });\n\n    const NoticeButtonHaver = ({ row }) => {\n        return (\n            <>\n                <IconButton onClick={() => deleteHandler(row.id, \"Notice\")}>\n                    <DeleteIcon color=\"error\" />\n                </IconButton>\n            </>\n        );\n    };\n\n    const actions = [\n        {\n            icon: <NoteAddIcon color=\"primary\" />, name: 'Add New Notice',\n            action: () => navigate(\"/Admin/addnotice\")\n        },\n        {\n            icon: <DeleteIcon color=\"error\" />, name: 'Delete All Notices',\n            action: () => deleteHandler(currentUser._id, \"Notices\")\n        }\n    ];\n\n    return (\n        <>\n            {loading ?\n                <div>Loading...</div>\n                :\n                <>\n                    {response ?\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: '16px' }}>\n                            <GreenButton variant=\"contained\"\n                                onClick={() => navigate(\"/Admin/addnotice\")}>\n                                Add Notice\n                            </GreenButton>\n                        </Box>\n                        :\n                        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n                            {Array.isArray(noticesList) && noticesList.length > 0 &&\n                                <TableTemplate buttonHaver={NoticeButtonHaver} columns={noticeColumns} rows={noticeRows} />\n                            }\n                            <SpeedDialTemplate actions={actions} />\n                        </Paper>\n                    }\n                </>\n            }\n        </>\n    );\n};\n\nexport default ShowNotices;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}