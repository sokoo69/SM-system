{"ast":null,"code":"var _jsxFileName = \"/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/components/TableViewTemplate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { StyledTableCell, StyledTableRow } from './styles';\nimport { Table, TableBody, TableContainer, TableHead, TablePagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableViewTemplate = _ref => {\n  _s();\n  let {\n    columns,\n    rows\n  } = _ref;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map((column, index) => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 49\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: (event, newPage) => setPage(newPage),\n      onRowsPerPageChange: event => {\n        setRowsPerPage(parseInt(event.target.value, 5));\n        setPage(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TableViewTemplate, \"OeamEqfqYGafDj9X5k7ZYjy/zXo=\");\n_c = TableViewTemplate;\nexport default TableViewTemplate;\nvar _c;\n$RefreshReg$(_c, \"TableViewTemplate\");","map":{"version":3,"names":["React","useState","StyledTableCell","StyledTableRow","Table","TableBody","TableContainer","TableHead","TablePagination","jsxDEV","_jsxDEV","Fragment","_Fragment","TableViewTemplate","_ref","_s","columns","rows","page","setPage","rowsPerPage","setRowsPerPage","children","stickyHeader","map","column","index","align","style","minWidth","label","fileName","_jsxFileName","lineNumber","columnNumber","slice","row","hover","role","tabIndex","value","id","format","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/shawon/Documents/code life/programming hero/SM-system/frontend/src/components/TableViewTemplate.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyledTableCell, StyledTableRow } from './styles';\nimport { Table, TableBody, TableContainer, TableHead, TablePagination } from '@mui/material';\n\nconst TableViewTemplate = ({ columns, rows }) => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    return (\n        <>\n            <TableContainer>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <StyledTableRow>\n                            {columns.map((column, index) => (\n                                <StyledTableCell\n                                    key={index}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </StyledTableCell>\n                            ))}\n                        </StyledTableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row) => {\n                                return (\n                                    <StyledTableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                        {columns.map((column, index) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <StyledTableCell key={index} align={column.align}>\n                                                    {\n                                                        column.format && typeof value === 'number'\n                                                            ? column.format(value)\n                                                            : value\n                                                    }\n                                                </StyledTableCell>\n                                            );\n                                        })}\n                                    </StyledTableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={(event, newPage) => setPage(newPage)}\n                onRowsPerPageChange={(event) => {\n                    setRowsPerPage(parseInt(event.target.value, 5));\n                    setPage(0);\n                }}\n            />\n        </>\n    )\n}\n\nexport default TableViewTemplate"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,UAAU;AAC1D,SAASC,KAAK,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7F,MAAMC,iBAAiB,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAAH,IAAA;EACxC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,oBACIS,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA,CAACJ,cAAc;MAAAgB,QAAA,eACXZ,OAAA,CAACN,KAAK;QAACmB,YAAY;QAAC,cAAW,cAAc;QAAAD,QAAA,gBACzCZ,OAAA,CAACH,SAAS;UAAAe,QAAA,eACNZ,OAAA,CAACP,cAAc;YAAAmB,QAAA,EACVN,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBhB,OAAA,CAACR,eAAe;cAEZyB,KAAK,EAAEF,MAAM,CAACE,KAAM;cACpBC,KAAK,EAAE;gBAAEC,QAAQ,EAAEJ,MAAM,CAACI;cAAS,CAAE;cAAAP,QAAA,EAEpCG,MAAM,CAACK;YAAK,GAJRJ,KAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAMjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACW;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT,eACZxB,OAAA,CAACL,SAAS;UAAAiB,QAAA,EACLL,IAAI,CACAkB,KAAK,CAACjB,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAC3DI,GAAG,CAAEY,GAAG,IAAK;YACV,oBACI1B,OAAA,CAACP,cAAc;cAACkC,KAAK;cAACC,IAAI,EAAC,UAAU;cAACC,QAAQ,EAAE,CAAC,CAAE;cAAAjB,QAAA,EAC9CN,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;gBAC5B,MAAMc,KAAK,GAAGJ,GAAG,CAACX,MAAM,CAACgB,EAAE,CAAC;gBAC5B,oBACI/B,OAAA,CAACR,eAAe;kBAAayB,KAAK,EAAEF,MAAM,CAACE,KAAM;kBAAAL,QAAA,EAEzCG,MAAM,CAACiB,MAAM,IAAI,OAAOF,KAAK,KAAK,QAAQ,GACpCf,MAAM,CAACiB,MAAM,CAACF,KAAK,CAAC,GACpBA;gBAAK,GAJGd,KAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAMT;cAE1B,CAAC;YAAC,GAZmDE,GAAG,CAACK,EAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAa9C;UAEzB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,eACjBxB,OAAA,CAACF,eAAe;MACZmC,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;MACrCC,SAAS,EAAC,KAAK;MACfC,KAAK,EAAE5B,IAAI,CAAC6B,MAAO;MACnB1B,WAAW,EAAEA,WAAY;MACzBF,IAAI,EAAEA,IAAK;MACX6B,YAAY,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK9B,OAAO,CAAC8B,OAAO,CAAE;MACnDC,mBAAmB,EAAGF,KAAK,IAAK;QAC5B3B,cAAc,CAAC8B,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACZ,KAAK,EAAE,CAAC,CAAC,CAAC;QAC/CrB,OAAO,CAAC,CAAC,CAAC;MACd;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA,gBACH;AAEX,CAAC;AAAAnB,EAAA,CA1DKF,iBAAiB;AAAAwC,EAAA,GAAjBxC,iBAAiB;AA4DvB,eAAeA,iBAAiB;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}